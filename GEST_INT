
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;


entity GEST_INT is Port ( 
    BTNC: IN STD_LOGIC;
    BTNU: IN STD_LOGIC;
    BTNL: IN STD_LOGIC;
    BTND: IN STD_LOGIC;    
    CLK: IN std_logic;
    RESET: IN std_logic;
    EDGE_SAL: OUT STD_LOGIC_VECTOR(3 downto 0)
    );
end GEST_INT;

architecture Behavioral of GEST_INT is
signal sync_sal1 : std_logic;
signal sync_sal2 : std_logic;
signal sync_sal3 : std_logic;
signal sync_sal4 : std_logic;


component SYNCHRNZR PORT(
 CLK : in std_logic;
 ASYNC_IN1 : in std_logic;
 ASYNC_IN2 : in std_logic;
 ASYNC_IN3 : in std_logic;
 ASYNC_IN4 : in std_logic; 
 RESET: IN std_logic;
 SYNC_OUT1 : out std_logic;
 SYNC_OUT2 : out std_logic;
 SYNC_OUT3 : out std_logic;
 SYNC_OUT4 : out std_logic
);
end component;


component EDGEDTCTR  PORT(
 CLK : in std_logic;
 SYNC_IN1 : in std_logic;
 SYNC_IN2 : in std_logic;
 SYNC_IN3 : in std_logic;
 SYNC_IN4 : in std_logic;
 RESET: IN STD_LOGIC;
 EDGE1 : out std_logic;
 EDGE2 : out std_logic;
 EDGE3 : out std_logic;
 EDGE4 : out std_logic

);
end component;
begin

Inst_synchronizer: SYNCHRNZR PORT MAP (
    CLK=>CLK,
    ASYNC_IN1=>BTNC,
    ASYNC_IN2=>BTNU,
    ASYNC_IN3=>BTNL,
    ASYNC_IN4=>BTND, 
    RESET=>RESET,
    SYNC_OUT1=>sync_sal1,
    SYNC_OUT2=>sync_sal2,
    SYNC_OUT3=>sync_sal3,
    SYNC_OUT4=>sync_sal4

);

Inst_edge_detector: EDGEDTCTR PORT MAP (
    CLK =>CLK,
    SYNC_IN1 =>sync_sal1,
    SYNC_IN2 =>sync_sal2,
    SYNC_IN3 =>sync_sal3,
    SYNC_IN4 =>sync_sal4,
    RESET=>RESET,
    EDGE1 =>EDGE_SAL(0),
    EDGE2 =>EDGE_SAL(1),
    EDGE3 =>EDGE_SAL(2),
    EDGE4 =>EDGE_SAL(3)
);

end Behavioral;
